<meta id="authenticity-token" name="authenticity-token" content="<%= form_authenticity_token %>">

<div class="flex flex-col justify-stretch items-stretch">
  <%= render MessageThreadHeaderComponent.new(@message.thread) %>
  <div class="flex flex-col justify-stretch items-stretch gap-2 p-4">
    <% if @notice %>
      <div class="bg-blue-100 border-t border-b border-blue-500 text-blue-700 px-4 py-3 w-full" role="alert">
        <p class="font-bold"><%= @notice %></p>
      </div>
    <% end %>
    <div class="flex flex-col justify-stretch items-start self-stretch flex-grow-0 flex-shrink-0 overflow-hidden rounded-md bg-white border border-gray-200">
      <div class="flex flex-col justify-stretch items-start self-stretch flex-grow-0 flex-shrink-0 overflow-hidden gap-4 px-6 pt-6 pb-4 border-t-0 border-r-0 border-b border-l-0 border-gray-200">
        <div class="flex justify-stretch items-start self-stretch flex-grow-0 flex-shrink-0 gap-4">
          <div class="flex flex-col justify-stretch items-start flex-grow gap-2">
            <div class="flex justify-strech items-start flex-grow-0 flex-shrink-0 relative gap-2">
              <p class="flex-grow-0 flex-shrink-0 w-[100px] text-base text-left text-gray-900">Odosielateľ:</p>
              <p class="flex-grow-0 flex-shrink-0 text-base font-semibold text-left text-gray-900"><%= @message.sender_name || 'Neznámy' %> </p>
            </div>
            <div class="flex justify-strech items-start flex-grow-0 flex-shrink-0 relative gap-2">
              <p class="flex-grow-0 flex-shrink-0 w-[100px] text-base text-left text-gray-900"> Adresát: </p>
              <p class="flex-grow-0 flex-shrink-0 text-base font-semibold text-left text-gray-900"><%= @message.recipient_name || 'Neznámy' %></p>
            </div>
            <% unless @message.not_yet_submitted? %>
              <div class="flex justify-center items-center flex-grow-0 flex-shrink-0 relative overflow-hidden gap-1.5 px-1.5 py-0.5 rounded-md bg-purple-50 border border-purple-300">
                <% if @message.being_submitted? %>
                  <p class="flex-grow-0 flex-shrink-0 text-sm text-left text-purple-600">Správa sa odosiela</p>
                <% elsif @message.submitted? %>
                  <p class="flex-grow-0 flex-shrink-0 text-sm text-left text-purple-600">Správa je odoslaná</p>
                <% end %>
              </div>
            <% end %>
          </div>
        </div>
      </div>

      <% if @message.custom_visualization? %>
        <%= form_tag message_draft_path(@message), method: :put, class: "w-full", id: "reply_form" do %>
          <div class="flex flex-col justify-strech items-start self-stretch flex-grow-0 flex-shrink-0 relative gap-4 p-6 border-t-0 border-r-0 border-b border-l-0 border-gray-200">
            <div class="mb-3 pt-0 w-full">
              <%= text_field_tag "message_title", @message.title, placeholder: "Predmet", onchange: 'document.getElementById("reply_form").submit();', disabled: !@message.editable?, class:"mb-3 px-3 py-4 placeholder-slate-300 text-slate-í00 relative bg-white bg-white rounded-lg text-base border-0 shadow outline-none focus:outline-none focus:ring w-full" %>
              <%= text_area_tag "message_text", @message.metadata["message_body"], placeholder: "Text", onchange: 'document.getElementById("reply_form").submit();', rows: 10, disabled: !@message.editable?, class:"px-3 py-4 placeholder-slate-300 text-slate-í00 relative bg-white bg-white rounded-lg text-base border-0 shadow outline-none focus:outline-none focus:ring w-full h-full" %>
            </div>
          </div>
        <% end %>
      <% else %>
        <%= @message.html_visualization&.html_safe %>
    <% end %>

      <% if @message.not_yet_submitted? || @message.objects.present? %>
        <div class="border-b w-full">
          <div class="flex justify-stretch items-center self-stretch flex-grow-0 flex-shrink-0 gap-3 px-6 py-4 border-b">
            <%= form_tag message_message_objects_path(@message), id: "attachment_form", method: :post, multipart: true, class: "w-full" do %>
              <div class="flex flex-col justify-between items-start flex-grow gap-2">
                <div class="flex justify-start items-center flex-grow relative rt flex-grow-0 flex-shrink-0 gap-2">
                  <svg xmlns="http://www.w3.org/2000/svg" height="1em" viewBox="0 0 448 512">
                    <!--! Font Awesome Free 6.4.0 by @fontawesome - https://fontawesome.com License - https://fontawesome.com/license (Commercial License) Copyright 2023 Fonticons, Inc. -->
                    <path d="M364.2 83.8c-24.4-24.4-64-24.4-88.4 0l-184 184c-42.1 42.1-42.1 110.3 0 152.4s110.3 42.1 152.4 0l152-152c10.9-10.9 28.7-10.9 39.6 0s10.9 28.7 0 39.6l-152 152c-64 64-167.6 64-231.6 0s-64-167.6 0-231.6l184-184c46.3-46.3 121.3-46.3 167.6 0s46.3 121.3 0 167.6l-176 176c-28.6 28.6-75 28.6-103.6 0s-28.6-75 0-103.6l144-144c10.9-10.9 28.7-10.9 39.6 0s10.9 28.7 0 39.6l-144 144c-6.7 6.7-6.7 17.7 0 24.4s17.7 6.7 24.4 0l176-176c24.4-24.4 24.4-64 0-88.4z"/>
                  </svg>
                  <p class="flex-grow-0 flex-shrink-0 text-base text-left text-gray-900">
                    <% if @message.objects.count > 0 %>
                      Správa obsahuje <b><%= t('message_object', :count => @message.objects.count, :locale => :sk) %></b>
                    <% elsif @message.not_yet_submitted? %>
                      <b>Pridať prílohu</b>
                    <% end %>
                  </p>
                  <% if @message.not_yet_submitted? %>
                    <%= label_tag :attachments_, "Pridať prílohy", class: "block mb-2 text-sm font-medium text-gray-900 dark:text-white" %>
                    <%= file_field_tag 'attachments[]', onchange: 'document.getElementById("attachment_form").submit()', class: "text-gray-900 bg-white focus:outline-none hover:bg-gray-100 focus:ring-4 focus:ring-gray-200 font-medium rounded-lg text-sm font-semibold px-5 py-2.5 dark:border-gray-600", multiple: true %>

                    <% if @message.objects.unsigned.present? %>
                      <button id="sign_objects" type="button" class="flex justify-end items-center gap-2.5 px-3.5 py-2.5 rounded-md bg-white border border-gray-300">
                        <b>Podpísať všetky nepodpísané dokumenty</b>
                      </button>
                    <% end %>
                  <% end %>
                </div>
              </div>
            <% end %>
          </div>

          <div class="flex flex-col justify-stretch items-stretch  relative gap-4 px-6 py-4 bg-white border-t-0 border-r-0 border-b border-l-0 border-gray-200">
            <%= render MessageAttachmentComponent.with_collection(@message.objects) %>
           </div>
        </div>
      <% end %>

      <% if @message.not_yet_submitted? %>
        <div class="flex justify-between w-full">
          <div class="gap-2 p-6 border-t-0 border-r-0 border-b border-l-0 border-gray-200">
            <%= button_to submit_message_draft_path(@message), method: :post, class: "flex justify-strech items-start self-stretch flex-grow-0 flex-shrink-0 gap-2 p-6 text-white bg-blue-700 hover:bg-blue-800 focus:ring-4 focus:ring-blue-300 font-medium rounded-lg text-sm px-3.5 py-2.5 dark:bg-blue-600 dark:hover:bg-blue-700 focus:outline-none dark:focus:ring-blue-800" do %>
              Odoslať
            <% end %>
          </div>
          <div class="gap-2 p-6 border-t-0 border-r-0 border-b border-l-0 border-gray-200">
            <%= button_to message_draft_path(@message), method: :delete, params: { redirect_url: (message_path(@message.original_message) if @message.original_message  || nil) }, class: "flex justify-strech items-start self-stretch flex-grow-0 flex-shrink-0 gap-2 p-6 rounded-lg border border-gray-400 px-3.5 py-2.5 hover:bg-gray-100 focus:ring-4 focus:ring-gray-100 rounded-lg", title: "Zahodiť draft" do %>
              <svg style="color: red" xmlns="http://www.w3.org/2000/svg" width="20" height="20" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z" fill="red"></path> <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z" fill="red"></path>
              </svg>
            <% end %>
          </div>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script type="text/javascript">
  var objectsToBeSigned = <%= @message.objects.unsigned.map{|o| {id: o.id, message_id: o.message_id}}.to_json.html_safe %>;

  // TODO separate to JS file (using stimulus?)
  function signObjects() {
    fetch("http://localhost:37200/batch", {
      method: "POST",
      headers: {"Content-Type": "application/json"},
      body: JSON.stringify({
        "totalNumberOfDocuments": objectsToBeSigned.length
      })
    }).then(function (response) {
      return response.json();
    }).then(function (data) {
      return data.batchId;
    }).then(async function (batchId) {
      for(const object of objectsToBeSigned) {
        await sign(object.id, object.message_id, batchId);
      }
    }).catch(function (err) {
      if (err.message === "Failed to fetch") {
        alert("Spustite aplikáciu autogram.")
      }
    });
  }

  async function sign(messageObjectId, messageId, batchId = null) {
    return new Promise((resolve, reject) => {
      fetch(`/messages/${messageId}/message_objects/${messageObjectId}/signing_data.json`)
        .then(function (response) {
          return response.json();
        })
        .then(async function (messageObjectData) {
          let payloadMimeType = `${messageObjectData.mime_type};base64`;
          let signatureLevel = "XAdES_BASELINE_B";
          let signatureContainer = "ASiC_E";

          let signedFileName = await setSignedFileName(messageObjectData);
          let signedFileMimeType = "application/vnd.etsi.asic-e+zip";

          switch(messageObjectData.mime_type) {
            case "application/pdf":
              signatureLevel = "PAdES_BASELINE_B";
              signatureContainer = null;

              signedFileName = messageObjectData.file_name;
              signedFileMimeType = messageObjectData.mime_type;
              break;
            // TODO check what in this case
            // case 'application/xml':
            //   break;
            case 'application/x-eform-xml':
              payloadMimeType = "application/xml;base64"
              break;
            case 'application/msword':
            case 'application/vnd.openxmlformats-officedocument.wordprocessingml.document':
              payloadMimeType = "application/vnd.openxmlformats-officedocument.wordprocessingml.document;base64"
              break;
            case 'image/jpeg':
            case 'image/tiff':
            case 'image/png':
              signatureLevel = "CAdES_BASELINE_B";
              break;
          }

          fetch("http://localhost:37200/sign", {
            method: "POST",
            headers: {'Content-Type': 'application/json'},
            body: JSON.stringify({
              batchId: batchId,
              document: {
                filename: messageObjectData.file_name,
                content: messageObjectData.content
              },
              parameters: {
                level: signatureLevel,
                container: signatureContainer,
                identifier: messageObjectData.identifier,
                schema: messageObjectData.schema,
                containerXmlns: messageObjectData.container_xmlns,
                transformation: messageObjectData.transformation
              },
              payloadMimeType: payloadMimeType
            })
          }).then(function (response) {
            return response.json();
          }).then(function (signedData) {
            updateObject(messageObjectId, messageId, signedFileName, signedFileMimeType, signedData.content);
          }).then(function () {
            resolve();
          })
        })
    });
  }

  async function updateObject(messageObjectId, messageId, signedFileName, signedFileMimeType, signedContent) {
    return new Promise((resolve, reject) => {
      fetch(`/messages/${messageId}/message_objects/${messageObjectId}`, {
        method: "PATCH",
        headers: {"Content-Type": "application/json"},
        body: JSON.stringify({
          authenticity_token: authenticityToken,
          name: signedFileName,
          mimetype: signedFileMimeType,
          is_signed: true,
          content: signedContent
        })
      }).then(function () {
        resolve();
      })
    });
  }

  async function setSignedFileName(messageObjectData) {
    return messageObjectData.file_name.substring(0, messageObjectData.file_name.lastIndexOf('.')).concat(".asice") || messageObjectData.file_name;
  }

  var signObjectsButton = document.querySelector("#sign_objects");
  if (signObjectsButton) {
    signObjectsButton.onclick = signObjects;
  }

  var authenticityToken = document.getElementById('authenticity-token').getAttribute('content')
</script>

